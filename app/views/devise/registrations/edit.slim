.callout
  h3.bold プロフィール登録編集  
  = simple_form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put, data: 'abide'}) do |f|
    = f.error_notification
    = devise_error_messages!

    table.unstriped.stack
      tr
        th
          | ニックネーム
        td
          = f.input :nickname, autofocus: true, label: false
      tr
        th
          | メールアドレス
        td
          = f.input :email, required: true, label: false
      tr
        th
          | 誕生日
        td
          = f.input :birthday, as: :string, start_year: Date.today.year - 90, end_year: Date.today.year - 16, input_html: {type: :date, value: resource.birthday}, label: false

          = render partial: 'visibility_options', locals: {resource: resource, visibility: :birthday_visibility}

      tr
        th
          | 名前
        td
          = f.input :last_name, required: true
          = f.input :last_name_katakana, required: true
          = f.input :first_name, required: true
          = f.input :first_name_katakana, required: true          

          = render partial: 'visibility_options', locals: {resource: resource, visibility: :name_visibility}
      tr
        th
          | 性別
        td
          = f.input :gender, collection: User.genders.keys, include_blank: "選択する", required: true, label: false
      tr
        th
          | 都道府県
        td
          = f.input :prefecture, collection: Area::PREFECTURES, include_blank: "選択する"
      tr
        th
          | エリア
        td          
          = f.input :area, collection: Area::LIST, include_blank: "選択する", required: true
          = render partial: 'visibility_options', locals: {resource: resource, visibility: :area_visibility}
      tr
        th
          | 職業
        td
          = f.input :profession 
          = render partial: 'visibility_options', locals: {resource: resource, visibility: :profession_visibility}
      tr
        th
          | プロフィール画像
        td
          p.bold 現在のプロフィール写真
          = image_tag current_user.photo, class: 'img-responsive'
          = f.input :photo, label: '新しいプロフィール写真を選択'    
      tr
        th
          | 自己紹介
        td
          = f.input :introduction, input_html: {rows: 5}, label: false
      tr
        th
          | 子ども
        td
          #children
            = f.simple_fields_for :children do |children|
              = render 'child_fields', f: children
            .links
              = link_to_add_association '<i class="fa fa-plus-circle" aria-hidden="true"></i> 子どもを追加する'.html_safe, f, :children, class: 'button small'

      tr.partner-info-tr
        th
          | パートナー年齢
        td
          = f.input :partner_age, collection: User::AGE, include_blank: "選択する", required: true

          = render partial: 'visibility_options', locals: {resource: resource, visibility: :partner_age_visibility}
      tr.partner-info-tr
        th
          | パートナー関係
        td
          = f.input :partner_relationship, collection: User::PARTNER_RELATIONSHIPS, include_blank: "選択する", required: true

          = render partial: 'visibility_options', locals: {resource: resource, visibility: :partner_relationship_visibility}

      tr.partner-info-tr
        th
          | パートナー癌種別
        td
          .input.select.required.user_cancer_type
            label.select.required for="user_cancer_type" 
              abbr title="required"  *
              | 癌種別
            select#user_cancer_type.select.required aria-required="true" name="user[cancer_type]" required="required" 
              option value=""  選択する
              - Cancer::TYPES.each do |key, value|
                optgroup label="#{key}"
                  - value.each do |type|
                    - selected = resource.cancer_type == type ? {selected: "selected"} : {}
                    option value="#{type}" *selected
                      = type
 
          = render partial: 'visibility_options', locals: {resource: resource, visibility: :cancer_type_visibility}                   

      tr.partner-info-tr
        th
          | パートナー癌ステージ
        td
          = f.input :cancer_stage, collection: Cancer::STAGES, include_blank: "選択する" 

          = render partial: 'visibility_options', locals: {resource: resource, visibility: :cancer_stage_visibility}

      tr.partner-info-tr
        th
          | 治療内容
        td
          .input.text.optional.user_treatments
            label.text.optional for="user_problems"
              | 治療内容
            br            
            - current_user.treatment_options.each do |treatment|
              label
                = check_box_tag "user[treatment_ids][]", treatment.id, resource.user_treatments.find_by(treatment_id: treatment.id)
                = treatment.name
          = f.input :other_treatment, label: '自由記述'

          hr 

          = render partial: 'visibility_options', locals: {resource: resource, visibility: :treatment_visibility}

      tr.partner-info-tr
        th
          | 治療内容
        td
          = f.input :treatment_content, input_html: {rows: 5} 
      tr.partner-info-tr
        th
          | メイン病院
        td
          = f.input :hospital

          = render partial: 'visibility_options', locals: {resource: resource, visibility: :hospital_visibility}
      tr.partner-info-tr
        th
          | 一番の悩み
        td
          = f.input :problems, input_html: {rows: 5}, label: false

          = render partial: 'visibility_options', locals: {resource: resource, visibility: :problems_visibility}

      hr/
      = f.input :profile_completed, as: :hidden, input_html: { value: true }
    .form-actions
      = f.button :submit, "登録情報を変更する"
  hr/
  p
    small= link_to "アカウントを消す", registration_path(resource_name), data: {confirm: "本当にアカウントを消してよろしいですか？（この操作を取り消すことはできません）"}, method: :delete
javascript:
  $(".visibility_check_boxes").on('click', function() {
    // in the handler, 'this' refers to the box clicked on
    var $box = $(this);
    if ($box.is(":checked")) {
      // the name of the box is retrieved using the .attr() method
      // as it is assumed and expected to be immutable
      var group = "input:checkbox[name='" + $box.attr("name") + "']";
      // the checked state of the group/box on the other hand will change
      // and the current value is retrieved using .prop() method
      $(group).prop("checked", false);
      $box.prop("checked", true);
    } else {
      $box.prop("checked", false);
    }
  });

  $(document).ready(function() {
    $('#children')
      .on('cocoon:before-insert', function(e,child_to_be_added) {
        child_to_be_added.fadeIn('slow');
      })
      .on('cocoon:before-remove', function(e, child) {
        // allow some time for the animation to complete
        $(this).data('remove-timeout', 1000);
        child.fadeOut('slow');
      });
  });